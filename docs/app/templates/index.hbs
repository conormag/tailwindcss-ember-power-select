<p class="mt-8">
  <a
    href="https://github.com/cibernox/ember-power-select"
    class="inline-block mt-2 underline"
    target="_blank"
    rel="noopener noreferrer"
  >
    Ember Power Select
  </a> is a
  powerful Ember addon for working with selects. This is a Tailwind CSS plugin
  for styling both
  <code>{{"<PowerSelect>"}}</code>,
  <code>{{"<PowerSelectMultiple>"}}</code>
  and all the options related to these.
  <a href="#demo" class="underline">Below you can see</a> all the possible variations of Power Select and the styles we applied.
</p>

<hr class="my-8">

<h2 class="mb-4 text-3xl font-bold">Installation</h2>

<h3 class="pb-6 text-xl font-semibold">
  1. Install the plugin:
</h3>

<p>Install the plugin using Yarn or npm:</p>

<CodeBlock @language="sh">yarn add -D tailwindcss-ember-power-select</CodeBlock>

<h3 class="pb-6 text-xl font-semibold">
  2. Add it to your <code>tailwind.config.js</code> file:
</h3>

<p>Add the plugin to the <code>plugins</code> section of your <code>tailwind.config.js</code> file:</p>

<CodeSnippet @name="basic-tailwind.config.js" />

<h3 class="pb-6 text-xl font-semibold">
  3. Disable default Ember Power Select theme.
</h3>

<p>Add to your <code>ember-cli-build.js</code> file:</p>

<CodeSnippet @name="basic-ember-cli-build.js" />

<h3 class="pb-6 text-xl font-semibold">
  4. Add autoprefixer to your PostCSS setup.
</h3>

Some styles require
<a
  href="https://github.com/postcss/autoprefixer"
  class="inline-block mt-2 underline"
  target="_blank"
  rel="noopener noreferrer"
>autoprefixer</a>
to be included in your application. You can follow
<a
  href="https://github.com/jeffjewiss/ember-cli-postcss#example"
  class="inline-block mt-2 underline"
  target="_blank"
  rel="noopener noreferrer"
>
  this example
</a>
to setup
in an Ember app using `ember-cli-postcss`.

<hr class="my-8">

<h2 id="demo" class="mb-4 text-3xl font-bold">Demo</h2>

<PowerSelectExamples />

<hr class="my-8">

<h2 class="mb-4 text-3xl font-bold">Configuration</h2>

<p>
  Some options are a little more complicated to customize using default Tailwind theme options.
  For that reason, we have exposed a few configuration options that can be passed into the plugin.
  Below you can see all the configuration options and their default values.
</p>

<CodeSnippet @name="config-options.js" />

<p>
  In your <code>tailwind.config.js</code> you can pass an object or a function that returns an object for the custom configuration.
  If you pass a function, it will receive a single object argument that can be destructured to get the
  <a
    class="underline"
    href="https://tailwindcss.com/docs/theme#referencing-other-values"
    target="_blank"
    rel="noopener noreferrer"
  >
    theme function
  </a>.
</p>

<CodeSnippet @name="tailwind-custom-config.js" />

<hr class="my-8">

<h2 class="mb-4 text-3xl font-bold">Customizing the default styles</h2>
<p>
  You can customize the default styles applied by this plugin in the
  <code>theme.emberPowerSelect.default</code>
  section of your
  <code>tailwind.config.js</code> file.
</p>

<p class="mt-4">
  Each element can be customized under the following keys:
  <code>trigger</code>,
  <code>placeholder</code>,
  <code>statusIcon</code>,
  <code>clearBtn</code>,
  <code>search</code>,
  <code>searchInput</code>,
  <code>dropdown</code>,
  <code>options</code>,
  <code>option</code>,
  <code>group</code>,
  <code>groupName</code>,
  <code>triggerMultipleInput</code>,
  <code>multipleOptions</code>,
  <code>multipleOption</code> and
  <code>multipleRemoveBtn</code>.
</p>

<CodeSnippet @name="tailwind-theme-config.js" />

<p>
  The configuration format is the same
  <a
    class="underline"
    href="https://tailwindcss.com/docs/plugins/#css-in-js-syntax"
    target="_blank"
    rel="noopener noreferrer"
  >CSS-in-JS</a>
  syntax used to author Tailwind plugins, so you are free to customize or add any CSS properties you like.
</p>

<p class="mt-4">
  See
  <a
    class="underline"
    href="https://github.com/josemarluedke/tailwindcss-ember-power-select/blob/master/src/defaultOptions.js"
    target="_blank"
    rel="noopener noreferrer"
  >the default options</a>
  used by the plugin for a complete reference of styles that are applied out of the box.
</p>

<h3 class="my-4 text-xl font-bold">Customizing the icons</h3>

<p>
  Providing a encoded SVG data URL as backgroundImage can be a bit cumbersome, so to make icon customization easier this plugin allows you to provide a normal unencoded SVG using a special icon property instead.
</p>

<p class="mt-4">
  The following properties allow for icons:
  <code>statusIcon</code>,
  <code>clearBtn</code> and
  <code>multipleRemoveBtn</code>.
</p>

<CodeSnippet @name="custom-icon.js" />

<h3 class="my-4 text-xl font-bold">Customizing the sizes</h3>

<p>
  We have provided 2 additional sizes for the trigger,
  <code>sm</code> and
  <code>lg</code>. We use Tailwind's CSS "modifier" feature for this.
</p>

<p class="mt-4">
  Below you can see how to change the default sizes.
</p>

<CodeSnippet @name="config-size.js" />

<p>
  To use a given size with Ember Power Select, you must add
  <code>ember-power-select-trigger-sm</code>
  or
  <code>ember-power-select-trigger-lg</code>
  class to the trigger.
</p>

<CodeSnippet @name="using-size.hbs" />

<hr class="my-8">

<h2 class="my-4 text-3xl font-bold">Dark Mode</h2>

<p>
  There are many ways that one can implement Dark Mode in an app.
  The most common way is using CSS variables. In this example, we have configured the plugin to use the CSS variables as the source for background, borders, and text.
</p>

<p class="mt-4">
  Note that the plugin does not implement Dark Mode by default. It's an application concern.
</p>

<CodeSnippet @name="config-dark-mode.js" />

<p>
  After the plugin is configured to use the CSS variables, we can just set the colors in the css.
</p>

<CodeSnippet @name="dark-mode.css" />

<p>
  Alternatively, you can inline a Tailwind CSS plugin to add the variables to CSS as part of the
  <a
    class="inline-block mt-2 underline"
    href="https://tailwindcss.com/docs/adding-base-styles/"
    target="_blank"
    rel="noopener noreferrer"
  >Base styles</a>.
</p>
<CodeSnippet @name="config-dark-mode-vars.js" />
